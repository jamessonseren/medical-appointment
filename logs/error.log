{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:22:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"14/11/2023 08:52:58"}
{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:22:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"14/11/2023 08:56:54"}
{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:22:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"14/11/2023 08:57:46"}
{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:22:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"14/11/2023 08:57:57"}
{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:22:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"14/11/2023 08:58:12"}
{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:22:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\useCases\\create-user\\create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"14/11/2023 08:58:27"}
{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'userRepository')\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:17:56\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:4:12)\n    at handle (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:20:16)\n    at Layer.handle [as handle_request] (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at Layer.handle [as handle_request] (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\layer.js:95:5)","timestamp":"14/11/2023 18:38:16"}
{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'userRepository')\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:17:56\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:4:12)\n    at handle (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:20:16)\n    at Layer.handle [as handle_request] (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at Layer.handle [as handle_request] (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\express\\lib\\router\\layer.js:95:5)","timestamp":"14/11/2023 18:38:33"}
{"level":"error","message":"PARAMETER_REQUIERED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:25:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 18:46:53"}
{"level":"error","message":"Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 18:57:07"}
{"level":"error","message":"Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 18:57:22"}
{"level":"error","message":"Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 18:58:32"}
{"level":"error","message":"ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 18:59:46"}
{"level":"error","message":"ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 19:00:46"}
{"level":"error","message":"ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"14/11/2023 19:03:58"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:22:13"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:23:08"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:24:28"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:25:44"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:37:21"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:39:02"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:42:14"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:45:06"}
{"level":"error","message":"ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:27:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"15/11/2023 08:46:19"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:49:07"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:50:17"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:50:26"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7     async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  8         \nâ†’ 9         const specialty = await prismaClient.specialty.create({\n              data: {\n                description: \"Description\",\n            +   name: String\n              }\n            })\n\nArgument `name` is missing.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:50:47"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.specialty.create()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:19:56\n\n  16 }\n  17 async save(data: SpecialtyEntity): Promise<SpecialtyEntity> {\n  18     \nâ†’ 19     const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 08:57:01"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:19:41)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 08:57:20"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 09:02:50"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 09:04:00"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.specialty.findUnique()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7 \n  8     async findBySpecialtyName(name: string): Promise<SpecialtyEntity | undefined> {\nâ†’ 9         const specialty = await prismaClient.specialty.findUnique({\n              where: {\n                name: undefined,\n            ?   id?: String,\n            ?   AND?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   OR?: SpecialtyWhereInput[],\n            ?   NOT?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   description?: StringFilter | String,\n            ?   createdAt?: DateTimeFilter | DateTime\n              }\n            })\n\nArgument `where` of type SpecialtyWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 09:05:29"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 09:07:12"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.specialty.findUnique()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7 \n  8     async findBySpecialtyName(name: string): Promise<SpecialtyEntity | undefined> {\nâ†’ 9         const specialty = await prismaClient.specialty.findUnique({\n              where: {\n                name: undefined,\n            ?   id?: String,\n            ?   AND?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   OR?: SpecialtyWhereInput[],\n            ?   NOT?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   description?: StringFilter | String,\n            ?   createdAt?: DateTimeFilter | DateTime\n              }\n            })\n\nArgument `where` of type SpecialtyWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 09:07:21"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.specialty.findUnique()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7 \n  8     async findBySpecialtyName(name: string): Promise<SpecialtyEntity | undefined> {\nâ†’ 9         const specialty = await prismaClient.specialty.findUnique({\n              where: {\n                name: undefined,\n            ?   id?: String,\n            ?   AND?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   OR?: SpecialtyWhereInput[],\n            ?   NOT?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   description?: StringFilter | String,\n            ?   createdAt?: DateTimeFilter | DateTime\n              }\n            })\n\nArgument `where` of type SpecialtyWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 09:09:09"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.specialty.findUnique()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\repositories\\implementations\\specialty.prisma.repository.ts:9:56\n\n  6 export class SpecialtyPrismaRepository implements ISpecialtyRepository {\n  7 \n  8     async findBySpecialtyName(name: string): Promise<SpecialtyEntity | undefined> {\nâ†’ 9         const specialty = await prismaClient.specialty.findUnique({\n              where: {\n                name: undefined,\n            ?   id?: String,\n            ?   AND?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   OR?: SpecialtyWhereInput[],\n            ?   NOT?: SpecialtyWhereInput | SpecialtyWhereInput[],\n            ?   description?: StringFilter | String,\n            ?   createdAt?: DateTimeFilter | DateTime\n              }\n            })\n\nArgument `where` of type SpecialtyWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at async l (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"15/11/2023 09:09:18"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 09:10:19"}
{"level":"error","message":"ERROR: Specialty name is required\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\entities\\specialty.entity.ts:24:38)\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:15:43)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:4:12)\n    at CreateSpecialtyUseCase.execute (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:20:16)\n    at CreateSpecialtyController.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.controller.ts:15:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.controller.ts:8:71","timestamp":"15/11/2023 09:13:17"}
{"level":"error","message":"ERROR: Specialty name is required\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\entities\\specialty.entity.ts:24:32)\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:15:43)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:4:12)\n    at CreateSpecialtyUseCase.execute (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:20:16)\n    at CreateSpecialtyController.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.controller.ts:15:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.controller.ts:8:71","timestamp":"15/11/2023 09:13:36"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 09:14:02"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 09:19:13"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 11:15:16"}
{"level":"error","message":"ERROR: Specialty already registered\n    at CreateSpecialtyUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:18:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\specialty\\useCases\\create-specialty\\create-specialty.usecase.ts:5:58)","timestamp":"15/11/2023 11:36:16"}
{"level":"error","message":"ERROR: Username already exists\n    at CreateDoctorUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\doctor\\useCases\\create-doctor\\create-doctor.usecase.ts:37:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\doctor\\useCases\\create-doctor\\create-doctor.usecase.ts:5:58)","timestamp":"15/11/2023 18:06:33"}
{"level":"error","message":"ERROR: Specialty does not exists\n    at CreateDoctorUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\doctor\\useCases\\create-doctor\\create-doctor.usecase.ts:33:30)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\15.medical_appointment\\src\\modules\\doctor\\useCases\\create-doctor\\create-doctor.usecase.ts:5:58)","timestamp":"15/11/2023 18:06:42"}
